SELECT * FROM films;

-------------------------------------------
-- INNER JOIN
-------------------------------------------

-------------------------------------------
-- Group Functions (Movies)
-------------------------------------------

SELECT TO_CHAR(filmReleaseDate, 'YYYY') AS "ReleaseYear", 
       AVG(filmboxofficedollars) AS "AvgIncome"
FROM films
GROUP BY TO_CHAR(filmReleaseDate, 'YYYY')
ORDER BY TO_CHAR(filmReleaseDate, 'YYYY') ;

SELECT directorgender, COUNT(*) AS "NumDirectors"
FROM directors 
GROUP BY directorgender;

-----------------------------------------
-- Join
-----------------------------------------

SELECT * FROM films ;
SELECT * FROM directors ;

SELECT drc.directorname , AVG(flm.filmboxofficedollars) AS "avgIncome", COUNT(*)
FROM films flm JOIN directors drc 
ON flm.filmDirectorId = drc.directorID 
GROUP BY drc.directorname 
ORDER BY AVG(flm.filmboxofficedollars) DESC;


SELECT drc.directorname , flm.filmName, flm.filmboxofficedollars, lng.languagename
FROM films flm JOIN directors drc 
ON flm.filmDirectorId = drc.directorID 
               JOIN languages lng 
ON  lng.languageid = flm.filmlanguageid;

----------------------------------------------
-- Exercise
----------------------------------------------


SELECT std.studioname, AVG(fil.filmboxofficedollars)
FROM films fil JOIN studios std 
ON   fil.filmStudioID = std.studioid
GROUP BY std.studioname 
ORDER BY AVG(fil.filmboxofficedollars) DESC;

SELECT AVG(fil.filmboxofficedollars), TO_CHAR(fil.filmReleaseDate, 'YYYY')
FROM films fil JOIN studios std 
ON   fil.filmStudioID = std.studioid
WHERE std.studioname = 'Walt Disney Pictures'
GROUP BY TO_CHAR(fil.filmReleaseDate, 'YYYY')
ORDER BY AVG(fil.filmboxofficedollars) DESC;

----------------------------------------------
-- OUTER JOIN (Northwind)
----------------------------------------------

UPDATE products SET categoryID = NULL WHERE unitPrice BETWEEN 15 AND 17 ;
INSERT INTO categories VALUES (9,'Kosher Food',NULL,NULL);

SELECT * FROM products ; 
SELECT * FROM categories 

SELECT COUNT(*) FROM products ; -- 77 
SELECT COUNT(*) FROM categories ; -- 8

-- Inner Join (72)
SELECT pro.productName, pro.unitPrice, cat.categoryName 
FROM products pro JOIN categories cat
ON   pro.categoryID = cat.categoryID;

-- LEFT: All products, including those without any category 
-- 72 (Inner) + 5 (Left)
SELECT pro.productName, pro.unitPrice, cat.categoryName 
FROM products pro LEFT OUTER JOIN categories cat
ON   pro.categoryID = cat.categoryID;

-- RIGHT: All categories, including those without any product 
-- 72 (Inner) + 1 (Right)
SELECT pro.productName, pro.unitPrice, cat.categoryName 
FROM products pro RIGHT OUTER JOIN categories cat
ON   pro.categoryID = cat.categoryID;

-- FULL: All categories, including those without any product 
--       All products, including those without any category 
-- 72 (Inner) + 1 (Right) + (5 Left)
SELECT pro.productName, pro.unitPrice, cat.categoryName 
FROM products pro FULL OUTER JOIN categories cat
ON   pro.categoryID = cat.categoryID;

